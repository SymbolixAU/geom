% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geos-linear-referencing.R
\name{geos_project}
\alias{geos_project}
\alias{geos_project_normalized}
\alias{geos_interpolate}
\alias{geos_interpolate_normalized}
\title{Linear referencing}
\usage{
geos_project(x, point)

geos_project_normalized(x, point)

geos_interpolate(x, distance, to = geo_ptype(x))

geos_interpolate_normalized(x, distance, to = geo_ptype(x))
}
\arguments{
\item{x}{A geometry-like (linestring) along which to interpolate
(or on which to project).}

\item{point}{A (point) geometry-like object}

\item{distance}{The distance along the geometry.}

\item{to}{A prototype created by \code{\link[=geo_ptype]{geo_ptype()}}}
}
\value{
\code{\link[=geos_project]{geos_project()}} and \code{\link[=geos_project_normalized]{geos_project_normalized()}} both return
a numeric vector of distances; \code{\link[=geos_interpolate]{geos_interpolate()}} and
\code{\link[=geos_interpolate_normalized]{geos_interpolate_normalized()}} both return a geometry-like point
vector.
}
\description{
Vectorized along \code{x} and \code{distance}.
}
\examples{
line <- geo_wkt("LINESTRING (0 0, 10 10)")

# geos_interpolate() works in absolute distances
geo_plot(line)
geo_plot_add(
  geos_interpolate(line, c(1, 5, 10)),
  col = "red"
)

# geos_interpolate() works in relative distances (from 0..1)
# this is useful for generating a number of equally-spaced points
# along a line
geo_plot(line)
geo_plot_add(
   geos_interpolate_normalized(line, seq(0, 1, length.out = 5)),
  col = "blue"
)

# geos_project() and geos_project_normalized() are the opposite
# of these operations
geos_project(line, geo_wkt("POINT (5 5)"))
geos_project_normalized(line, geo_wkt("POINT (5 5)"))

}

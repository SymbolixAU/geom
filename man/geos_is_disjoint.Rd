% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geos-binary-predicates.R
\name{geos_is_disjoint}
\alias{geos_is_disjoint}
\alias{geos_touches}
\alias{geos_intersects}
\alias{geos_crosses}
\alias{geos_is_within}
\alias{geos_contains}
\alias{geos_overlaps}
\alias{geos_equals}
\alias{geos_covers}
\alias{geos_is_covered_by}
\title{Binary predicate operators}
\usage{
geos_is_disjoint(x, y)

geos_touches(x, y)

geos_intersects(x, y)

geos_crosses(x, y)

geos_is_within(x, y)

geos_contains(x, y)

geos_overlaps(x, y)

geos_equals(x, y)

geos_covers(x, y)

geos_is_covered_by(x, y)
}
\arguments{
\item{x}{A geometry-like object}

\item{y}{A geometry-like object. \code{x} and \code{y} of length 1
is recycled to the length of the other (like \code{\link[tibble:tibble]{tibble::tibble()}}).}
}
\value{
A logical vector
}
\description{
\href{https://en.wikipedia.org/wiki/DE-9IM#Spatial_predicates}{Binary predicate operators} take
two geometries and return \code{TRUE} or \code{FALSE} for each geometry pair.
}
\details{
\describe{
\item{\code{\link[=geos_is_disjoint]{geos_is_disjoint()}}}{
Returns \code{TRUE} if \code{x} and \code{y} \emph{do not} have a point in common. Is
the opposite of \code{\link[=geos_intersects]{geos_intersects()}}.
}
\item{\code{\link[=geos_touches]{geos_touches()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have a point in common, but
their interiors do not intersect.
}
\item{\code{\link[=geos_intersects]{geos_intersects()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have a point in common, regardless
of whether or not their interiors intersect. Is the opposite
of \code{\link[=geos_is_disjoint]{geos_is_disjoint()}}.
}
\item{\code{\link[=geos_is_within]{geos_is_within()}}}{
Returns \code{TRUE} if all points in \code{x} are are also within \code{y}.
\code{geos_within(x, y)} is identical to \code{geos_contains(y, x)}.
}
\item{\code{\link[=geos_contains]{geos_contains()}}}{
Returns \code{TRUE} if all points in \code{y} are are also within \code{x}.
\code{geos_contains(x, y)} is identical to \code{geos_within(y, x)}.
}
\item{\code{\link[=geos_overlaps]{geos_overlaps()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have \emph{some} but \emph{not all} points
in common, and the intersection of the two is the same geometry
type as the input. For example, two polygons can overlap, but
a polygon and a line cannot.
}
\item{\code{\link[=geos_crosses]{geos_crosses()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have \emph{some} but \emph{not all} points
in common, and the intersection of the two is the \emph{not} the
same geometry type as the input. For example, a polygon
and a line can cross, but two polygons cannot.
}
\item{\code{\link[=geos_equals]{geos_equals()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have \emph{all} points in common and no
points that intersect the exterior of the other.
}
\item{\code{\link[=geos_covers]{geos_covers()}}}{
Returns \code{TRUE} if every point in \code{y} is a point of \code{x}. Is the opposite
of \code{\link[=geos_is_covered_by]{geos_is_covered_by()}}.
}
\item{\code{\link[=geos_is_covered_by]{geos_is_covered_by()}}}{
Returns \code{TRUE} if every point in \code{x} is a point of \code{y}. Is the opposite
of \code{\link[=geos_covers]{geos_covers()}}.
}
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geo-binary-vector-operators.R
\name{geo_disjoint}
\alias{geo_disjoint}
\alias{geo_touches}
\alias{geo_intersects}
\alias{geo_crosses}
\alias{geo_within}
\alias{geo_contains}
\alias{geo_overlaps}
\alias{geo_equals}
\alias{geo_covers}
\alias{geo_covered_by}
\title{Binary predicate operators}
\usage{
geo_disjoint(x, y)

geo_touches(x, y)

geo_intersects(x, y)

geo_crosses(x, y)

geo_within(x, y)

geo_contains(x, y)

geo_overlaps(x, y)

geo_equals(x, y)

geo_covers(x, y)

geo_covered_by(x, y)
}
\arguments{
\item{x}{A geometry-like object}

\item{y}{A geometry-like object. \code{x} and \code{y} of length 1
is recycled to the length of the other (like \code{\link[tibble:tibble]{tibble::tibble()}}).}
}
\value{
A logical vector
}
\description{
\href{https://en.wikipedia.org/wiki/DE-9IM#Spatial_predicates}{Binary predicate operators} take
two geometries and return \code{TRUE} or \code{FALSE} for each geometry pair.
}
\details{
\describe{
\item{\code{\link[=geo_disjoint]{geo_disjoint()}}}{
Returns \code{TRUE} if \code{x} and \code{y} \emph{do not} have a point in common. Is
the opposite of \code{\link[=geo_intersects]{geo_intersects()}}.
}
\item{\code{\link[=geo_touches]{geo_touches()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have a point in common, but
their interiors do not intersect.
}
\item{\code{\link[=geo_intersects]{geo_intersects()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have a point in common, regardless
of whether or not their interiors intersect. Is the opposite
of \code{\link[=geo_disjoint]{geo_disjoint()}}.
}
\item{\code{\link[=geo_within]{geo_within()}}}{
Returns \code{TRUE} if all points in \code{x} are are also within \code{y}.
\code{geo_within(x, y)} is identical to \code{geo_contains(y, x)}.
}
\item{\code{\link[=geo_contains]{geo_contains()}}}{
Returns \code{TRUE} if all points in \code{y} are are also within \code{x}.
\code{geo_contains(x, y)} is identical to \code{geo_within(y, x)}.
}
\item{\code{\link[=geo_overlaps]{geo_overlaps()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have \emph{some} but \emph{not all} points
in common, and the intersection of the two is the same geometry
type as the input. For example, two polygons can overlap, but
a polygon and a line cannot.
}
\item{\code{\link[=geo_crosses]{geo_crosses()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have \emph{some} but \emph{not all} points
in common, and the intersection of the two is the \emph{not} the
same geometry type as the input. For example, a polygon
and a line can cross, but two polygons cannot.
}
\item{\code{\link[=geo_equals]{geo_equals()}}}{
Returns \code{TRUE} if \code{x} and \code{y} have \emph{all} points in common and no
points that intersect the exterior of the other.
}
\item{\code{\link[=geo_covers]{geo_covers()}}}{
Returns \code{TRUE} if every point in \code{y} is a point of \code{x}. Is the opposite
of \code{\link[=geo_covered_by]{geo_covered_by()}}.
}
\item{\code{\link[=geo_covered_by]{geo_covered_by()}}}{
Returns \code{TRUE} if every point in \code{x} is a point of \code{y}. Is the opposite
of \code{\link[=geo_covered_by]{geo_covered_by()}}.
}
}
}
